worker_processes 2;
pid	/srv/www/damncms/pid/nginx.pid;

user damncms damncms;

error_log	/var/log/damncms/nginx-error.log;

events {
	worker_connections	1024;
	use epoll;
}

http {
	# Some sensible defaults.
	include				mime.types;
	default_type			application/octet-stream;
	client_max_body_size	20m;
	sendfile				on;
	gzip					on;
	gzip_min_length			1100;
	gzip_buffers			4 8k;
	gzip_types				text/plain;
	output_buffers			1 32k;
	postpone_output			1460;
	tcp_nopush				on;
	tcp_nodelay				on;
	keepalive_timeout		75 20;
	ignore_invalid_headers	on;


	# Directories
	client_body_temp_path /srv/www/damncms/tmp/client_body/ 2 2;
	fastcgi_temp_path		/srv/www/damncms/tmp/fastcgi/;
	proxy_temp_path		/srv/www/damncms/tmp/proxy/;
	uwsgi_temp_path		/srv/www/damncms/tmp/uwsgi/;

	# Logging
	access_log			/var/log/damncms/nginx-access.log combined;

	# uWSGI serving Django.
	upstream django {
		# Distribute requests to servers based on client IP. This keeps load
		# balancing fair but consistent per-client. In this instance we're
		# only using one uWGSI worker anyway.
		ip_hash;
		server unix:/srv/www/damncms/sock/uwsgi.sock;
	}
	server {
		listen		80;
		server_name apicms.appseleration.net;
		charset		utf-8;

		# Django admin media.
		location /media/admin/ {
		alias /srv/www/damncms/src/django/django/contrib/admin/media/;
		}

		# Your project's static media.
		location /media/simpleapp/ {
			gridfs damncms_media_dev root_collection=media.simpleapp field=filename type=string;
			mongo 127.0.0.1:27017;
		}

		# Finally, send all non-media requests to the Django server.
		location / {
			uwsgi_pass	django;
			include	uwsgi_params;
		}
	}
}
